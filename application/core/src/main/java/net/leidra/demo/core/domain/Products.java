/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-core:java/core/domain/Entity.e.vm.java
 */
package net.leidra.demo.core.domain;

import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;

import java.io.Serializable;
import java.util.Date;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.Objects;
import com.jaxio.jpa.querybyexample.Identifiable;

@Entity
@Table(name = "PRODUCTS")
public class Products implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Products.class.getName());

    // Raw attributes
    private Integer id;
    private String name;
    private Date createdDate;
    private Date lastModifiedName;

    // Many to one
    private Brands brand;
    private Users user;

    @Override
    public String className() {
        return Products.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "ID", precision = 10)
    @GeneratedValue
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Products id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [name] ------------------------

    @NotEmpty
    @Size(max = 50)
    @Column(name = "NAME", nullable = false, unique = true, length = 50)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Products name(String name) {
        setName(name);
        return this;
    }

    // -- [createdDate] ------------------------

    @NotNull
    @Column(name = "CREATED_DATE", nullable = false, length = 23)
    @Temporal(TIMESTAMP)
    public Date getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    public Products createdDate(Date createdDate) {
        setCreatedDate(createdDate);
        return this;
    }

    // -- [lastModifiedName] ------------------------

    @NotNull
    @Column(name = "LAST_MODIFIED_NAME", nullable = false, length = 23)
    @Temporal(TIMESTAMP)
    public Date getLastModifiedName() {
        return lastModifiedName;
    }

    public void setLastModifiedName(Date lastModifiedName) {
        this.lastModifiedName = lastModifiedName;
    }

    public Products lastModifiedName(Date lastModifiedName) {
        setLastModifiedName(lastModifiedName);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Products.brand ==> Brands.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "BRAND_ID", nullable = false)
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Brands getBrand() {
        return brand;
    }

    /**
     * Set the {@link #brand} without adding this Products instance on the passed {@link #brand}
     */
    public void setBrand(Brands brand) {
        this.brand = brand;
    }

    public Products brand(Brands brand) {
        setBrand(brand);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Products.user ==> Users.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "USER_ID", nullable = false)
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Users getUser() {
        return user;
    }

    /**
     * Set the {@link #user} without adding this Products instance on the passed {@link #user}
     */
    public void setUser(Users user) {
        this.user = user;
    }

    public Products user(Users user) {
        setUser(user);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Products withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Products && hashCode() == other.hashCode());
    }

    private volatile int previousHashCode = 0;

    @Override
    public int hashCode() {
        int hashCode = Objects.hashCode(getName());

        if (previousHashCode != 0 && previousHashCode != hashCode) {
            log.warning("DEVELOPER: hashCode has changed!." //
                    + "If you encounter this message you should take the time to carefuly review equals/hashCode for: " //
                    + getClass().getCanonicalName());
        }

        previousHashCode = hashCode;
        return hashCode;
    }

    /**
     * Construct a readable string representation for this Products instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("id", getId()) //
                .add("name", getName()) //
                .add("createdDate", getCreatedDate()) //
                .add("lastModifiedName", getLastModifiedName()) //
                .toString();
    }
}
